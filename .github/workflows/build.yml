name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JSK 21
        uses: actions/set-java@v4
        with:
          java-version: 21
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@4v
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Evan-highvolt_SPRING_BOOT_APP_WEB


        docker-build-image-app:
          runs-on: ubuntu-latest
          needs:
            build
          steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Connect to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.WEBAPP_DOCKER_PASSWORD }}

            - name: Download a single artifact
              uses: actions/download-artifact@v4
              with:
                name: my-artifact.zip

            - name: List files in the repository
              run: ls ${{ github.workspace }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                context: .
                file: Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USER }}/mon_api_img

            - run: echo "This job is done
