name: Spring webApp CI/CD with Maven and Docker
on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
    types: [opened, synchronize, reopened]

jobs:
  init-workflow:
    name: Init workflow
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of the branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  project-build:
    name: Construct jar
    runs-on: ubuntu-latest
    needs:
      - init-workflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install chrome Browser for selenium
        uses: browser-actions/setup-chrome@latest

      - name: run chrome Browser for version control
        run: chrome --version

      - name: set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64

      - name: Cache SonarCloud packages #installation de l'environnement pour sonarcloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages #installation de l'environnement pour maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build jar and analyze SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Evan-highvolt_SPRING_BOOT_APP_WEB

            # permet de charger un artefact
      - name: Charging artefact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: target/*.jar
            #          retention-days: 10

            # message de fin indiquant que tout s'est bien pass√©
      - run: echo "üçè This job's status is ${{ job.status }}."

  docker-build-image-app:
    runs-on: ubuntu-latest
    needs:
      project-build
    steps:
        - uses: actions/checkout@v4

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Connect to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USER }}
            password: ${{ secrets.WEBAPP_DOCKER_PASSWORD }}

        - name: Download a single artifact
          uses: actions/download-artifact@v4
          with:
              name: my-artifact

        - name: List files in the repository
          run: ls ${{ github.workspace }}

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            file: Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USER }}/webApp_img

        - run: echo "This job is done ‚ñ¨‚òª"